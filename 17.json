{
    "name": "伸缩盒(Flexible Box)",
    "items": [
        {
            "name": "flex",
            "mode": ["none", "<' flex-grow '>", "<' flex-shrink '>", "<' flex-basis '>"],
            "content": [
                "none关键字的计算值为: 0 0 auto",
                "用来指定扩展比率，即剩余空间是正值时此「flex子项」相对于「flex容器」里其他「flex子项」能分配到空间比例。在「flex」属性中该值如果被省略则默认为「1」",
                "用来指定收缩比率，即剩余空间是负值时此「flex子项」相对于「flex容器」里其他「flex子项」能收缩的空间比例。在收缩的时候收缩比率会以伸缩基准值加权。在「flex」属性中该值如果被省略则默认为「1」",
                "用来指定伸缩基准值，即在根据伸缩比率计算出剩余空间的分布之前，「flex子项」长度的起始数值。在「flex」属性中该值如果被省略则默认为「0%」。在「flex」属性中该值如果被指定为「auto」，则伸缩基准值的计算值是自身的 <' width '> 设置，如果自身的宽度没有定义，则长度取决于内容。"
            ]
        },
        {
            "name": "flex-grow",
            "mode": ["<number>"],
            "content": [
                "用数值来定义扩展比率。不允许负值"
            ]
        },
        {
            "name": "flex-shrink",
            "mode": ["<number>"],
            "content": [
                "用数值来定义收缩比率。不允许负值"
            ]
        },
        {
            "name": "flex-basis",
            "mode": ["<length>", "<percentage>", "auto", "content"],
            "content": [
                "用长度值来定义宽度。不允许负值",
                "用百分比来定义宽度。不允许负值",
                "无特定宽度值，取决于其它属性值",
                "基于内容自动计算宽度"
            ]
        },
        {
            "name": "flex-flow",
            "mode": ["<' flex-direction '>", "<' flex-wrap '>"],
            "content": [
                "定义弹性盒子元素的排列方向。",
                "控制flex容器是单行或者多行。"
            ]
        },
        {
            "name": "flex-direction",
            "mode": ["row", "row-reverse", "column", "column-reverse"],
            "content": [
                "主轴与行内轴方向作为默认的书写模式。即横向从左到右排列（左对齐）。",
                "对齐方式与row相反。",
                "主轴与块轴方向作为默认的书写模式。即纵向从上往下排列（顶对齐）。",
                "对齐方式与column相反。"
            ]
        },
        {
            "name": "flex-wrap",
            "mode": ["nowrap", "wrap", "wrap-reverse"],
            "content": [
                "flex容器为单行。该情况下flex子项可能会溢出容器",
                "flex容器为多行。该情况下flex子项溢出的部分会被放置到新行，子项内部会发生断行",
                "反转 wrap 排列。"
            ]
        },
        {
            "name": "align-content",
            "mode": ["flex-start", "flex-end", "center", "space-between", "space-around", "stretch"],
            "content": [
                "各行向弹性盒容器的起始位置堆叠。弹性盒容器中第一行的侧轴起始边界紧靠住该弹性盒容器的侧轴起始边界，之后的每一行都紧靠住前面一行。",
                "各行向弹性盒容器的结束位置堆叠。弹性盒容器中最后一行的侧轴起结束界紧靠住该弹性盒容器的侧轴结束边界，之后的每一行都紧靠住前面一行。",
                "各行向弹性盒容器的中间位置堆叠。各行两两紧靠住同时在弹性盒容器中居中对齐，保持弹性盒容器的侧轴起始内容边界和第一行之间的距离与该容器的侧轴结束内容边界与第最后一行之间的距离相等。（如果剩下的空间是负数，则各行会向两个方向溢出的相等距离。）",
                "各行在弹性盒容器中平均分布。如果剩余的空间是负数或弹性盒容器中只有一行，该值等效于'flex-start'。在其它情况下，第一行的侧轴起始边界紧靠住弹性盒容器的侧轴起始内容边界，最后一行的侧轴结束边界紧靠住弹性盒容器的侧轴结束内容边界，剩余的行则按一定方式在弹性盒窗口中排列，以保持两两之间的空间相等。",
                "各行在弹性盒容器中平均分布，两端保留子元素与子元素之间间距大小的一半。如果剩余的空间是负数或弹性盒容器中只有一行，该值等效于'center'。在其它情况下，各行会按一定方式在弹性盒容器中排列，以保持两两之间的空间相等，同时第一行前面及最后一行后面的空间是其他空间的一半。",
                "各行将会伸展以占用剩余的空间。如果剩余的空间是负数，该值等效于'flex-start'。在其它情况下，剩余空间被所有行平分，以扩大它们的侧轴尺寸。"
            ]
        },
        {
            "name": "align-items",
            "mode": ["flex-start", "flex-end", "center", "baseline", "stretch"],
            "content": [
                "弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴起始边界。",
                "弹性盒子元素的侧轴（纵轴）结束位置的边界紧靠住该行的侧轴结束边界。",
                "弹性盒子元素在该行的侧轴（纵轴）上居中放置。（如果该行的尺寸小于弹性盒子元素的尺寸，则会向两个方向溢出相同的长度）。",
                "如弹性盒子元素的行内轴与侧轴为同一条，则该值与'flex-start'等效。其它情况下，该值将参与基线对齐。",
                "如果指定侧轴大小的属性值为'auto'，则其值会使项目的边距盒的尺寸尽可能接近所在行的尺寸，但同时会遵照'min/max-width/height'属性的限制。"
            ]
        },
        {
            "name": "align-self",
            "mode": ["auto", "flex-start", "flex-end", "center", "baseline", "stretch"],
            "content": [
                "如果'align-self'的值为'auto'，则其计算值为元素的父元素的'align-items'值，如果其没有父元素，则计算值为'stretch'。",
                "弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴起始边界。",
                "弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴结束边界。",
                "弹性盒子元素在该行的侧轴（纵轴）上居中放置。（如果该行的尺寸小于弹性盒子元素的尺寸，则会向两个方向溢出相同的长度）。",
                "如弹性盒子元素的行内轴与侧轴为同一条，则该值与'flex-start'等效。其它情况下，该值将参与基线对齐。",
                "如果指定侧轴大小的属性值为'auto'，则其值会使项目的边距盒的尺寸尽可能接近所在行的尺寸，但同时会遵照'min/max-width/height'属性的限制。"
            ]
        },
        {
            "name": "justify-content",
            "mode": ["flex-start", "flex-end", "center", "space-between", "space-around"],
            "content": [
                "弹性盒子元素将向行起始位置对齐。该行的第一个子元素的主起始位置的边界将与该行的主起始位置的边界对齐，同时所有后续的伸缩盒项目与其前一个项目对齐。",
                "弹性盒子元素将向行结束位置对齐。该行的第一个子元素的主结束位置的边界将与该行的主结束位置的边界对齐，同时所有后续的伸缩盒项目与其前一个项目对齐。",
                "弹性盒子元素将向行中间位置对齐。该行的子元素将相互对齐并在行中居中对齐，同时第一个元素与行的主起始位置的边距等同与最后一个元素与行的主结束位置的边距（如果剩余空间是负数，则保持两端相等长度的溢出）。",
                "弹性盒子元素会平均地分布在行里。如果最左边的剩余空间是负数，或该行只有一个子元素，则该值等效于'flex-start'。在其它情况下，第一个元素的边界与行的主起始位置的边界对齐，同时最后一个元素的边界与行的主结束位置的边距对齐，而剩余的伸缩盒项目则平均分布，并确保两两之间的空白空间相等。",
                "弹性盒子元素会平均地分布在行里，两端保留子元素与子元素之间间距大小的一半。如果最左边的剩余空间是负数，或该行只有一个伸缩盒项目，则该值等效于'center'。在其它情况下，伸缩盒项目则平均分布，并确保两两之间的空白空间相等，同时第一个元素前的空间以及最后一个元素后的空间为其他空白空间的一半。"
            ]
        },
        {
            "name": "order",
            "mode": ["<integer>"],
            "content": [
                "用整数值来定义排列顺序，数值小的排在前面。可以为负值。"
            ]
        }
    ]
}